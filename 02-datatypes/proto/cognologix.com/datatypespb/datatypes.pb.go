// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: datatypes.proto

package datatypespb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EnumerationRequest_Planet int32

const (
	EnumerationRequest_SUN     EnumerationRequest_Planet = 0
	EnumerationRequest_MERCURY EnumerationRequest_Planet = 1
	EnumerationRequest_VENUS   EnumerationRequest_Planet = 2
	EnumerationRequest_EARTH   EnumerationRequest_Planet = 3
	EnumerationRequest_MARS    EnumerationRequest_Planet = 4
	EnumerationRequest_JUPITER EnumerationRequest_Planet = 5
	EnumerationRequest_SATURN  EnumerationRequest_Planet = 6
	EnumerationRequest_URANUS  EnumerationRequest_Planet = 7
	EnumerationRequest_NEPTUNE EnumerationRequest_Planet = 8
	EnumerationRequest_PLUTO   EnumerationRequest_Planet = 9
)

// Enum value maps for EnumerationRequest_Planet.
var (
	EnumerationRequest_Planet_name = map[int32]string{
		0: "SUN",
		1: "MERCURY",
		2: "VENUS",
		3: "EARTH",
		4: "MARS",
		5: "JUPITER",
		6: "SATURN",
		7: "URANUS",
		8: "NEPTUNE",
		9: "PLUTO",
	}
	EnumerationRequest_Planet_value = map[string]int32{
		"SUN":     0,
		"MERCURY": 1,
		"VENUS":   2,
		"EARTH":   3,
		"MARS":    4,
		"JUPITER": 5,
		"SATURN":  6,
		"URANUS":  7,
		"NEPTUNE": 8,
		"PLUTO":   9,
	}
)

func (x EnumerationRequest_Planet) Enum() *EnumerationRequest_Planet {
	p := new(EnumerationRequest_Planet)
	*p = x
	return p
}

func (x EnumerationRequest_Planet) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumerationRequest_Planet) Descriptor() protoreflect.EnumDescriptor {
	return file_datatypes_proto_enumTypes[0].Descriptor()
}

func (EnumerationRequest_Planet) Type() protoreflect.EnumType {
	return &file_datatypes_proto_enumTypes[0]
}

func (x EnumerationRequest_Planet) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumerationRequest_Planet.Descriptor instead.
func (EnumerationRequest_Planet) EnumDescriptor() ([]byte, []int) {
	return file_datatypes_proto_rawDescGZIP(), []int{2, 0}
}

type EnumerationRequest_EnumAllowingAlias int32

const (
	EnumerationRequest_UNKNOWN EnumerationRequest_EnumAllowingAlias = 0
	EnumerationRequest_STARTED EnumerationRequest_EnumAllowingAlias = 1
	EnumerationRequest_RUNNING EnumerationRequest_EnumAllowingAlias = 1
)

// Enum value maps for EnumerationRequest_EnumAllowingAlias.
var (
	EnumerationRequest_EnumAllowingAlias_name = map[int32]string{
		0: "UNKNOWN",
		1: "STARTED",
		// Duplicate value: 1: "RUNNING",
	}
	EnumerationRequest_EnumAllowingAlias_value = map[string]int32{
		"UNKNOWN": 0,
		"STARTED": 1,
		"RUNNING": 1,
	}
)

func (x EnumerationRequest_EnumAllowingAlias) Enum() *EnumerationRequest_EnumAllowingAlias {
	p := new(EnumerationRequest_EnumAllowingAlias)
	*p = x
	return p
}

func (x EnumerationRequest_EnumAllowingAlias) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumerationRequest_EnumAllowingAlias) Descriptor() protoreflect.EnumDescriptor {
	return file_datatypes_proto_enumTypes[1].Descriptor()
}

func (EnumerationRequest_EnumAllowingAlias) Type() protoreflect.EnumType {
	return &file_datatypes_proto_enumTypes[1]
}

func (x EnumerationRequest_EnumAllowingAlias) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumerationRequest_EnumAllowingAlias.Descriptor instead.
func (EnumerationRequest_EnumAllowingAlias) EnumDescriptor() ([]byte, []int) {
	return file_datatypes_proto_rawDescGZIP(), []int{2, 1}
}

type ScalarDataTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	D      float64 `protobuf:"fixed64,1,opt,name=d,proto3" json:"d,omitempty"`
	F      float32 `protobuf:"fixed32,2,opt,name=f,proto3" json:"f,omitempty"`
	I32    int32   `protobuf:"varint,3,opt,name=i32,proto3" json:"i32,omitempty"`
	I64    int64   `protobuf:"varint,4,opt,name=i64,proto3" json:"i64,omitempty"`
	Ui32   uint32  `protobuf:"varint,5,opt,name=ui32,proto3" json:"ui32,omitempty"`
	Ui64   uint64  `protobuf:"varint,6,opt,name=ui64,proto3" json:"ui64,omitempty"`
	Si32   int32   `protobuf:"zigzag32,7,opt,name=si32,proto3" json:"si32,omitempty"`
	Si64   int64   `protobuf:"zigzag64,8,opt,name=si64,proto3" json:"si64,omitempty"`
	Fxd32  uint32  `protobuf:"fixed32,9,opt,name=fxd32,proto3" json:"fxd32,omitempty"`
	Fxd64  uint64  `protobuf:"fixed64,10,opt,name=fxd64,proto3" json:"fxd64,omitempty"`
	Sfxd32 int32   `protobuf:"fixed32,11,opt,name=sfxd32,proto3" json:"sfxd32,omitempty"`
	Sfxd64 int64   `protobuf:"fixed64,12,opt,name=sfxd64,proto3" json:"sfxd64,omitempty"`
	B      bool    `protobuf:"varint,13,opt,name=b,proto3" json:"b,omitempty"`
	S      string  `protobuf:"bytes,14,opt,name=s,proto3" json:"s,omitempty"`
	Bts    []byte  `protobuf:"bytes,15,opt,name=bts,proto3" json:"bts,omitempty"`
}

func (x *ScalarDataTypeRequest) Reset() {
	*x = ScalarDataTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datatypes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarDataTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarDataTypeRequest) ProtoMessage() {}

func (x *ScalarDataTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datatypes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarDataTypeRequest.ProtoReflect.Descriptor instead.
func (*ScalarDataTypeRequest) Descriptor() ([]byte, []int) {
	return file_datatypes_proto_rawDescGZIP(), []int{0}
}

func (x *ScalarDataTypeRequest) GetD() float64 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetF() float32 {
	if x != nil {
		return x.F
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetI32() int32 {
	if x != nil {
		return x.I32
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetI64() int64 {
	if x != nil {
		return x.I64
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetUi32() uint32 {
	if x != nil {
		return x.Ui32
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetUi64() uint64 {
	if x != nil {
		return x.Ui64
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetSi32() int32 {
	if x != nil {
		return x.Si32
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetSi64() int64 {
	if x != nil {
		return x.Si64
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetFxd32() uint32 {
	if x != nil {
		return x.Fxd32
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetFxd64() uint64 {
	if x != nil {
		return x.Fxd64
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetSfxd32() int32 {
	if x != nil {
		return x.Sfxd32
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetSfxd64() int64 {
	if x != nil {
		return x.Sfxd64
	}
	return 0
}

func (x *ScalarDataTypeRequest) GetB() bool {
	if x != nil {
		return x.B
	}
	return false
}

func (x *ScalarDataTypeRequest) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *ScalarDataTypeRequest) GetBts() []byte {
	if x != nil {
		return x.Bts
	}
	return nil
}

type ScalarDataTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	D      float64 `protobuf:"fixed64,1,opt,name=d,proto3" json:"d,omitempty"`
	F      float32 `protobuf:"fixed32,2,opt,name=f,proto3" json:"f,omitempty"`
	I32    int32   `protobuf:"varint,3,opt,name=i32,proto3" json:"i32,omitempty"`
	I64    int64   `protobuf:"varint,4,opt,name=i64,proto3" json:"i64,omitempty"`
	Ui32   uint32  `protobuf:"varint,5,opt,name=ui32,proto3" json:"ui32,omitempty"`
	Ui64   uint64  `protobuf:"varint,6,opt,name=ui64,proto3" json:"ui64,omitempty"`
	Si32   int32   `protobuf:"zigzag32,7,opt,name=si32,proto3" json:"si32,omitempty"`
	Si64   int64   `protobuf:"zigzag64,8,opt,name=si64,proto3" json:"si64,omitempty"`
	Fxd32  uint32  `protobuf:"fixed32,9,opt,name=fxd32,proto3" json:"fxd32,omitempty"`
	Fxd64  uint64  `protobuf:"fixed64,10,opt,name=fxd64,proto3" json:"fxd64,omitempty"`
	Sfxd32 int32   `protobuf:"fixed32,11,opt,name=sfxd32,proto3" json:"sfxd32,omitempty"`
	Sfxd64 int64   `protobuf:"fixed64,12,opt,name=sfxd64,proto3" json:"sfxd64,omitempty"`
	B      bool    `protobuf:"varint,13,opt,name=b,proto3" json:"b,omitempty"`
	S      string  `protobuf:"bytes,14,opt,name=s,proto3" json:"s,omitempty"`
	Bts    []byte  `protobuf:"bytes,15,opt,name=bts,proto3" json:"bts,omitempty"`
}

func (x *ScalarDataTypeResponse) Reset() {
	*x = ScalarDataTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datatypes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarDataTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarDataTypeResponse) ProtoMessage() {}

func (x *ScalarDataTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datatypes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarDataTypeResponse.ProtoReflect.Descriptor instead.
func (*ScalarDataTypeResponse) Descriptor() ([]byte, []int) {
	return file_datatypes_proto_rawDescGZIP(), []int{1}
}

func (x *ScalarDataTypeResponse) GetD() float64 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetF() float32 {
	if x != nil {
		return x.F
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetI32() int32 {
	if x != nil {
		return x.I32
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetI64() int64 {
	if x != nil {
		return x.I64
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetUi32() uint32 {
	if x != nil {
		return x.Ui32
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetUi64() uint64 {
	if x != nil {
		return x.Ui64
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetSi32() int32 {
	if x != nil {
		return x.Si32
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetSi64() int64 {
	if x != nil {
		return x.Si64
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetFxd32() uint32 {
	if x != nil {
		return x.Fxd32
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetFxd64() uint64 {
	if x != nil {
		return x.Fxd64
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetSfxd32() int32 {
	if x != nil {
		return x.Sfxd32
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetSfxd64() int64 {
	if x != nil {
		return x.Sfxd64
	}
	return 0
}

func (x *ScalarDataTypeResponse) GetB() bool {
	if x != nil {
		return x.B
	}
	return false
}

func (x *ScalarDataTypeResponse) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *ScalarDataTypeResponse) GetBts() []byte {
	if x != nil {
		return x.Bts
	}
	return nil
}

type EnumerationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet []EnumerationRequest_Planet `protobuf:"varint,6,rep,packed,name=planet,proto3,enum=EnumerationRequest_Planet" json:"planet,omitempty"`
}

func (x *EnumerationRequest) Reset() {
	*x = EnumerationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datatypes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumerationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumerationRequest) ProtoMessage() {}

func (x *EnumerationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datatypes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumerationRequest.ProtoReflect.Descriptor instead.
func (*EnumerationRequest) Descriptor() ([]byte, []int) {
	return file_datatypes_proto_rawDescGZIP(), []int{2}
}

func (x *EnumerationRequest) GetPlanet() []EnumerationRequest_Planet {
	if x != nil {
		return x.Planet
	}
	return nil
}

type EnumerationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet []string `protobuf:"bytes,1,rep,name=planet,proto3" json:"planet,omitempty"`
}

func (x *EnumerationResponse) Reset() {
	*x = EnumerationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datatypes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumerationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumerationResponse) ProtoMessage() {}

func (x *EnumerationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datatypes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumerationResponse.ProtoReflect.Descriptor instead.
func (*EnumerationResponse) Descriptor() ([]byte, []int) {
	return file_datatypes_proto_rawDescGZIP(), []int{3}
}

func (x *EnumerationResponse) GetPlanet() []string {
	if x != nil {
		return x.Planet
	}
	return nil
}

var File_datatypes_proto protoreflect.FileDescriptor

var file_datatypes_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb1, 0x02, 0x0a, 0x15, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x33, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x33, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x36, 0x34,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x69, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x33, 0x32, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x69, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75,
	0x69, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x04, 0x73, 0x69, 0x33, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x36, 0x34, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x73, 0x69, 0x36, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x78, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05, 0x66, 0x78, 0x64, 0x33,
	0x32, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x78, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x05, 0x66, 0x78, 0x64, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x66, 0x78, 0x64, 0x33,
	0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x06, 0x73, 0x66, 0x78, 0x64, 0x33, 0x32, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x66, 0x78, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x10, 0x52,
	0x06, 0x73, 0x66, 0x78, 0x64, 0x36, 0x34, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x01, 0x62, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x62, 0x74, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x16, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0c, 0x0a, 0x01, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x64, 0x12, 0x0c,
	0x0a, 0x01, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x66, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x33, 0x32, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x36, 0x34,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x75, 0x69, 0x33, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x75, 0x69, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x33, 0x32,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x52, 0x04, 0x73, 0x69, 0x33, 0x32, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x73, 0x69, 0x36, 0x34,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x78, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x05, 0x66, 0x78, 0x64, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x78, 0x64, 0x36, 0x34, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05, 0x66, 0x78, 0x64, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x66, 0x78, 0x64, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x06, 0x73, 0x66,
	0x78, 0x64, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x66, 0x78, 0x64, 0x36, 0x34, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x10, 0x52, 0x06, 0x73, 0x66, 0x78, 0x64, 0x36, 0x34, 0x12, 0x0c, 0x0a, 0x01,
	0x62, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x01, 0x62, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x74, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x62, 0x74, 0x73, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x8b, 0x02, 0x0a, 0x12, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6c, 0x61,
	0x6e, 0x65, 0x74, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x22, 0x7b, 0x0a, 0x06, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x55, 0x4e, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x4d, 0x45, 0x52, 0x43, 0x55, 0x52, 0x59, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x56,
	0x45, 0x4e, 0x55, 0x53, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x41, 0x52, 0x54, 0x48, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x52, 0x53, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4a,
	0x55, 0x50, 0x49, 0x54, 0x45, 0x52, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x41, 0x54, 0x55,
	0x52, 0x4e, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x52, 0x41, 0x4e, 0x55, 0x53, 0x10, 0x07,
	0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x45, 0x50, 0x54, 0x55, 0x4e, 0x45, 0x10, 0x08, 0x12, 0x09, 0x0a,
	0x05, 0x50, 0x4c, 0x55, 0x54, 0x4f, 0x10, 0x09, 0x22, 0x3e, 0x0a, 0x11, 0x45, 0x6e, 0x75, 0x6d,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x06, 0x22, 0x2d,
	0x0a, 0x13, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x32, 0x9b, 0x01,
	0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x47, 0x0a, 0x12, 0x54, 0x65, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x10, 0x54, 0x65,
	0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1c, 0x5a, 0x1a, 0x63,
	0x6f, 0x67, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_datatypes_proto_rawDescOnce sync.Once
	file_datatypes_proto_rawDescData = file_datatypes_proto_rawDesc
)

func file_datatypes_proto_rawDescGZIP() []byte {
	file_datatypes_proto_rawDescOnce.Do(func() {
		file_datatypes_proto_rawDescData = protoimpl.X.CompressGZIP(file_datatypes_proto_rawDescData)
	})
	return file_datatypes_proto_rawDescData
}

var file_datatypes_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_datatypes_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_datatypes_proto_goTypes = []interface{}{
	(EnumerationRequest_Planet)(0),            // 0: EnumerationRequest.Planet
	(EnumerationRequest_EnumAllowingAlias)(0), // 1: EnumerationRequest.EnumAllowingAlias
	(*ScalarDataTypeRequest)(nil),             // 2: ScalarDataTypeRequest
	(*ScalarDataTypeResponse)(nil),            // 3: ScalarDataTypeResponse
	(*EnumerationRequest)(nil),                // 4: EnumerationRequest
	(*EnumerationResponse)(nil),               // 5: EnumerationResponse
}
var file_datatypes_proto_depIdxs = []int32{
	0, // 0: EnumerationRequest.planet:type_name -> EnumerationRequest.Planet
	2, // 1: DataTypeService.TestScalarDataType:input_type -> ScalarDataTypeRequest
	4, // 2: DataTypeService.TestEnumDataType:input_type -> EnumerationRequest
	3, // 3: DataTypeService.TestScalarDataType:output_type -> ScalarDataTypeResponse
	5, // 4: DataTypeService.TestEnumDataType:output_type -> EnumerationResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_datatypes_proto_init() }
func file_datatypes_proto_init() {
	if File_datatypes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_datatypes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarDataTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datatypes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarDataTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datatypes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumerationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datatypes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumerationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datatypes_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_datatypes_proto_goTypes,
		DependencyIndexes: file_datatypes_proto_depIdxs,
		EnumInfos:         file_datatypes_proto_enumTypes,
		MessageInfos:      file_datatypes_proto_msgTypes,
	}.Build()
	File_datatypes_proto = out.File
	file_datatypes_proto_rawDesc = nil
	file_datatypes_proto_goTypes = nil
	file_datatypes_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataTypeServiceClient is the client API for DataTypeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataTypeServiceClient interface {
	TestScalarDataType(ctx context.Context, in *ScalarDataTypeRequest, opts ...grpc.CallOption) (*ScalarDataTypeResponse, error)
	TestEnumDataType(ctx context.Context, in *EnumerationRequest, opts ...grpc.CallOption) (*EnumerationResponse, error)
}

type dataTypeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDataTypeServiceClient(cc grpc.ClientConnInterface) DataTypeServiceClient {
	return &dataTypeServiceClient{cc}
}

func (c *dataTypeServiceClient) TestScalarDataType(ctx context.Context, in *ScalarDataTypeRequest, opts ...grpc.CallOption) (*ScalarDataTypeResponse, error) {
	out := new(ScalarDataTypeResponse)
	err := c.cc.Invoke(ctx, "/DataTypeService/TestScalarDataType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataTypeServiceClient) TestEnumDataType(ctx context.Context, in *EnumerationRequest, opts ...grpc.CallOption) (*EnumerationResponse, error) {
	out := new(EnumerationResponse)
	err := c.cc.Invoke(ctx, "/DataTypeService/TestEnumDataType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataTypeServiceServer is the server API for DataTypeService service.
type DataTypeServiceServer interface {
	TestScalarDataType(context.Context, *ScalarDataTypeRequest) (*ScalarDataTypeResponse, error)
	TestEnumDataType(context.Context, *EnumerationRequest) (*EnumerationResponse, error)
}

// UnimplementedDataTypeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataTypeServiceServer struct {
}

func (*UnimplementedDataTypeServiceServer) TestScalarDataType(context.Context, *ScalarDataTypeRequest) (*ScalarDataTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestScalarDataType not implemented")
}
func (*UnimplementedDataTypeServiceServer) TestEnumDataType(context.Context, *EnumerationRequest) (*EnumerationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestEnumDataType not implemented")
}

func RegisterDataTypeServiceServer(s *grpc.Server, srv DataTypeServiceServer) {
	s.RegisterService(&_DataTypeService_serviceDesc, srv)
}

func _DataTypeService_TestScalarDataType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScalarDataTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataTypeServiceServer).TestScalarDataType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DataTypeService/TestScalarDataType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataTypeServiceServer).TestScalarDataType(ctx, req.(*ScalarDataTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataTypeService_TestEnumDataType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnumerationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataTypeServiceServer).TestEnumDataType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DataTypeService/TestEnumDataType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataTypeServiceServer).TestEnumDataType(ctx, req.(*EnumerationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataTypeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DataTypeService",
	HandlerType: (*DataTypeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TestScalarDataType",
			Handler:    _DataTypeService_TestScalarDataType_Handler,
		},
		{
			MethodName: "TestEnumDataType",
			Handler:    _DataTypeService_TestEnumDataType_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "datatypes.proto",
}
